language:
  - cpp

sudo:
  - false

dist:
  - trusty

cache:
  directories:
    - deps

matrix:
  include:
    - os: osx
      osx_image: xcode9
      env: PLATFORM=mac COVERAGE=ON
    - os: osx
      osx_image: xcode8.3
      env: PLATFORM=mac COVERAGE=ON
    - os: osx
      osx_image: xcode9
      language: objective-c
      env: PLATFORM=ios
    - os: osx
      osx_image: xcode8.3
      language: objective-c
      env: PLATFORM=ios

    - os: linux
      env: PLATFORM=linux COVERAGE=ON MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - valgrind

        coverity_scan:
          project:
            name: "zhuhaow/libnekit"
          notification_email: zhuhaow@gmail.com
          build_command_prepend: "cov-configure --comptype gcc --compiler `which gcc-5`; cmake -DPLATFORM=$PLATFORM -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain/${PLATFORM}.cmake ."
          build_command: "make"
          branch_pattern: coverity_scan


    - os: linux
      env: PLATFORM=linux COVERAGE=ON MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - valgrind

        coverity_scan:
          project:
            name: "zhuhaow/libnekit"
          notification_email: zhuhaow@gmail.com
          build_command_prepend: "cov-configure --comptype gcc --compiler `which gcc-6`;cmake -DPLATFORM=$PLATFORM -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain/${PLATFORM}.cmake ."
          build_command: "make"
          branch_pattern: coverity_scan

before_install:
  - eval "${MATRIX_EVAL}"

install:
  - pip install --user plumbum clint requests
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./scripts/install_cmake.sh; export PATH=`pwd`/deps/cmake/bin:$PATH; cmake --version; fi

before_script:
  - scripts/travis_check_deps.sh

script:
  - set -e
  - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then scripts/travis.sh; fi

after_success:
  - if [ "$COVERAGE" == "ON" ]; then bash <(curl -s https://codecov.io/bash); fi
